// Code generated by MockGen. DO NOT EDIT.
// Source: sum_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSumService is a mock of SumService interface.
type MockSumService struct {
	ctrl     *gomock.Controller
	recorder *MockSumServiceMockRecorder
}

// MockSumServiceMockRecorder is the mock recorder for MockSumService.
type MockSumServiceMockRecorder struct {
	mock *MockSumService
}

// NewMockSumService creates a new mock instance.
func NewMockSumService(ctrl *gomock.Controller) *MockSumService {
	mock := &MockSumService{ctrl: ctrl}
	mock.recorder = &MockSumServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSumService) EXPECT() *MockSumServiceMockRecorder {
	return m.recorder
}

// Valid mocks base method.
func (m *MockSumService) Valid(age int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Valid", age)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Valid indicates an expected call of Valid.
func (mr *MockSumServiceMockRecorder) Valid(age interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Valid", reflect.TypeOf((*MockSumService)(nil).Valid), age)
}
